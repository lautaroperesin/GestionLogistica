// <auto-generated />
using System;
using LogisticaBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogisticaBackend.Migrations
{
    [DbContext(typeof(LogisticaContext))]
    [Migration("20250901182904_EliminaTablaEstadoEnvio")]
    partial class EliminaTablaEstadoEnvio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GestionLogisticaBackend.Models.MovimientoCaja", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_movimiento");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_pago");

                    b.Property<int>("IdFactura")
                        .HasColumnType("int")
                        .HasColumnName("id_factura");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int")
                        .HasColumnName("metodo_pago");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("monto");

                    b.Property<string>("Observaciones")
                        .HasColumnType("longtext")
                        .HasColumnName("observaciones");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("IdFactura");

                    b.ToTable("movimientos_caja");
                });

            modelBuilder.Entity("GestionLogisticaBackend.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_alta");

                    b.Property<DateTime?>("FechaExpiracionRefreshToken")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_expiracion_refresh_token");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext")
                        .HasColumnName("refresh_token");

                    b.Property<string>("RolUsuario")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("rol_usuario");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ultimo_acceso");

                    b.HasKey("IdUsuario");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cliente");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("telefono");

                    b.HasKey("IdCliente");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Conductor", b =>
                {
                    b.Property<int>("IdConductor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_conductor");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdConductor"));

                    b.Property<string>("ClaseLicencia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("clase_licencia");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("conductor");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.Property<DateTime>("VencimientoLicencia")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("vencimiento_licencia");

                    b.HasKey("IdConductor");

                    b.HasIndex("Dni")
                        .IsUnique();

                    b.ToTable("conductores");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Envio", b =>
                {
                    b.Property<int>("IdEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_envio");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEnvio"));

                    b.Property<decimal>("CostoTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costo_total");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado_envio");

                    b.Property<DateTime>("FechaCreacionEnvio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_creacion_envio");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_salida");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int>("IdConductor")
                        .HasColumnType("int")
                        .HasColumnName("id_conductor");

                    b.Property<int>("IdDestino")
                        .HasColumnType("int")
                        .HasColumnName("id_destino");

                    b.Property<int>("IdOrigen")
                        .HasColumnType("int")
                        .HasColumnName("id_origen");

                    b.Property<int>("IdTipoCarga")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_carga");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int")
                        .HasColumnName("id_vehiculo");

                    b.Property<string>("NumeroSeguimiento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero_seguimiento");

                    b.Property<decimal>("PesoKg")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("peso_kg");

                    b.Property<decimal>("VolumenM3")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("volumen_m3");

                    b.HasKey("IdEnvio");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdConductor");

                    b.HasIndex("IdDestino");

                    b.HasIndex("IdOrigen");

                    b.HasIndex("IdTipoCarga");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("envios");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_factura");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_emision");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_vencimiento");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int>("IdEnvio")
                        .HasColumnType("int")
                        .HasColumnName("id_envio");

                    b.Property<decimal>("Iva")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("iva");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero_factura");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("subtotal");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("total");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEnvio");

                    b.HasIndex("NumeroFactura")
                        .IsUnique();

                    b.ToTable("facturas");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Localidad", b =>
                {
                    b.Property<int>("IdLocalidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_localidad");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdLocalidad"));

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int")
                        .HasColumnName("id_provincia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("localidad");

                    b.HasKey("IdLocalidad");

                    b.HasIndex("IdProvincia");

                    b.ToTable("localidades");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pais");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPais"));

                    b.Property<string>("CodigoIso")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("codigo_iso");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pais");

                    b.HasKey("IdPais");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("paises");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_provincia");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProvincia"));

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<int>("IdPais")
                        .HasColumnType("int")
                        .HasColumnName("id_pais");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provincia");

                    b.HasKey("IdProvincia");

                    b.HasIndex("IdPais");

                    b.ToTable("provincias");
                });

            modelBuilder.Entity("LogisticaBackend.Models.TipoCarga", b =>
                {
                    b.Property<int>("IdTipoCarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_carga");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTipoCarga"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("carga");

                    b.HasKey("IdTipoCarga");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("tipos_carga");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Ubicacion", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ubicacion");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUbicacion"));

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("direccion");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int")
                        .HasColumnName("id_localidad");

                    b.HasKey("IdUbicacion");

                    b.HasIndex("IdLocalidad");

                    b.ToTable("ubicaciones");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Vehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_vehiculo");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdVehiculo"));

                    b.Property<decimal>("CapacidadKg")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("capacidad_kg");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado_vehiculo");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modelo");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("patente");

                    b.Property<DateTime>("RtoVencimiento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("rto_vencimiento");

                    b.Property<DateTime>("UltimaInspeccion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ultima_inspeccion");

                    b.HasKey("IdVehiculo");

                    b.HasIndex("Patente")
                        .IsUnique();

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("GestionLogisticaBackend.Models.MovimientoCaja", b =>
                {
                    b.HasOne("LogisticaBackend.Models.Factura", "Factura")
                        .WithMany("MovimientosCaja")
                        .HasForeignKey("IdFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Envio", b =>
                {
                    b.HasOne("LogisticaBackend.Models.Cliente", "Cliente")
                        .WithMany("Envios")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticaBackend.Models.Conductor", "Conductor")
                        .WithMany("Envios")
                        .HasForeignKey("IdConductor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticaBackend.Models.Ubicacion", "Destino")
                        .WithMany("EnviosDestino")
                        .HasForeignKey("IdDestino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LogisticaBackend.Models.Ubicacion", "Origen")
                        .WithMany("EnviosOrigen")
                        .HasForeignKey("IdOrigen")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LogisticaBackend.Models.TipoCarga", "TipoCarga")
                        .WithMany("Envios")
                        .HasForeignKey("IdTipoCarga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticaBackend.Models.Vehiculo", "Vehiculo")
                        .WithMany("Envios")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Conductor");

                    b.Navigation("Destino");

                    b.Navigation("Origen");

                    b.Navigation("TipoCarga");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Factura", b =>
                {
                    b.HasOne("LogisticaBackend.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticaBackend.Models.Envio", "Envio")
                        .WithMany("Facturas")
                        .HasForeignKey("IdEnvio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Envio");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Localidad", b =>
                {
                    b.HasOne("LogisticaBackend.Models.Provincia", "Provincia")
                        .WithMany("Localidades")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Provincia", b =>
                {
                    b.HasOne("LogisticaBackend.Models.Pais", "Pais")
                        .WithMany("Provincias")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Ubicacion", b =>
                {
                    b.HasOne("LogisticaBackend.Models.Localidad", "Localidad")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("IdLocalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Cliente", b =>
                {
                    b.Navigation("Envios");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Conductor", b =>
                {
                    b.Navigation("Envios");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Envio", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Factura", b =>
                {
                    b.Navigation("MovimientosCaja");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Localidad", b =>
                {
                    b.Navigation("Ubicaciones");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Pais", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Provincia", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("LogisticaBackend.Models.TipoCarga", b =>
                {
                    b.Navigation("Envios");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Ubicacion", b =>
                {
                    b.Navigation("EnviosDestino");

                    b.Navigation("EnviosOrigen");
                });

            modelBuilder.Entity("LogisticaBackend.Models.Vehiculo", b =>
                {
                    b.Navigation("Envios");
                });
#pragma warning restore 612, 618
        }
    }
}
